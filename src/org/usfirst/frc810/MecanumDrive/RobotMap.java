// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc810.MecanumDrive;

import java.util.Timer;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

import com.kauailabs.navx.frc.*;

import edu.wpi.first.wpilibj.I2C.Port;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	
	public static AHRS navX;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainFR;
    public static SpeedController driveTrainFL;
    public static SpeedController driveTrainBR;
    public static SpeedController driveTrainBL;
    public static RobotDrive driveTrainRobotDrive41;
    public static Servo cameraPan;
    public static Servo cameraTilt;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainFR = new Spark(0);
        LiveWindow.addActuator("DriveTrain", "FR", (Spark) driveTrainFR);
        
        driveTrainFL = new Spark(1);
        LiveWindow.addActuator("DriveTrain", "FL", (Spark) driveTrainFL);
        
        driveTrainBR = new Spark(2);
        LiveWindow.addActuator("DriveTrain", "BR", (Spark) driveTrainBR);
        
        driveTrainBL = new Spark(3);
        LiveWindow.addActuator("DriveTrain", "BL", (Spark) driveTrainBL);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainFL, driveTrainBL,
              driveTrainFR, driveTrainBR);
        
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(1.0);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        cameraPan = new Servo(8);
        LiveWindow.addActuator("Camera", "Pan", cameraPan);
        
        cameraTilt = new Servo(9);
        LiveWindow.addActuator("Camera", "Tilt", cameraTilt);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        navX = new AHRS(edu.wpi.first.wpilibj.SerialPort.Port.kMXP);
       // LiveWindow.addSensor("DriveTrain", "Navx", navX);
       AutoPutData.addNumber("Navx", navX::getAngle);
       AutoPutData.addNumber("Velocity X", navX::getVelocityX);
       AutoPutData.addNumber("Velocity Y", navX::getVelocityY);
       AutoPutData.addNumber("Velocity Z", navX::getVelocityZ);
       navX.resetDisplacement();
      
    }
}
